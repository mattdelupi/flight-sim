close all; clear; clc

myAircraft = load('f18harv.mat');

ModelsInputs = zeros(1, 11);
delta_e_deg_cases = -20 : 5 : 10;

liftCharacteristicsPlot(myAircraft, ModelsInputs, [-5, 40], ...
                delta_e_deg_cases, 'ex72liftcharacteristics.pdf')

staticPolarPlot(myAircraft, ModelsInputs, [-5, 40], ...
                delta_e_deg_cases, 'ex72dragcharacteristics.pdf')

q_degps_cases = linspace(-10, 15, 6);
pitchCharacteristicsPlot(myAircraft, ModelsInputs, [-5, 40], ...
                     delta_e_deg_cases, q_degps_cases, ...
                     'ex72pitchcharacteristics.pdf')

t_end = 5;

x_EG0 = 0;
y_EG0 = 0;
z_EG0 = -1000;

phi0 = 0;
theta0 = convang(4.46, 'deg', 'rad');
psi0 = 0;
Quat0 = angle2quat(psi0, theta0, phi0);

alpha0_deg = 9.96;
beta0_deg = 0;
Mach0 = 0.20;
[temp0, sound0, press0, dens0] = atmosisa(-z_EG0);
V0 = Mach0 * sound0;
u0 = V0 * cosd(beta0_deg) * cosd(alpha0_deg);
v0 = V0 * sind(beta0_deg);
w0 = V0 * cosd(beta0_deg) * sind(alpha0_deg);

p0 = 0;
q0 = 0;
r0 = 0;

state0 = [u0, v0, w0, p0, q0, r0, x_EG0, y_EG0, z_EG0, Quat0].';

delta_T0 = 0.254;
delta_T_law = @(t) interp1([0, 1] * t_end, ...
                           [1, 1] * delta_T0, ...
                            t, 'linear');

delta_e0_deg = -11.86;
delta_e_deg_law = @(t) interp1( ...
                [0, 1/10, 2/10, 3/10, 4/10, 6/10, 1] * t_end, ...
                [1,   1,    2,    1,    0,    1,  1] * delta_e0_deg, ...
                 t, 'pchip');

delta_s0_deg = 0;
delta_s_deg_law = @(t) interp1([0, 1] * t_end, ...
                               [1, 1] * delta_s0_deg, ...
                                t, 'linear');

delta_a0_deg = 0;
delta_a_deg_law = @(t) interp1([0, 1] * t_end, ...
                               [1, 1] * delta_a0_deg, ...
                                t, 'linear');

delta_r0_deg = 0;
delta_r_deg_law = @(t) interp1([0, 1] * t_end, ...
                               [1, 1] * delta_r0_deg, ...
                                t, 'linear');

[time, ...
 delta_T, delta_e_deg, delta_s_deg, delta_a_deg, delta_r_deg, ...
 u, v, w, p, q, r, ...
 x_EG, y_EG, z_EG, quat0, quatx, quaty, quatz] = ...
     SixDoFQuat(t_end, state0, ...
                myAircraft, ...
                delta_T_law, ...
                delta_e_deg_law, delta_s_deg_law, ...
                delta_a_deg_law, delta_r_deg_law);

Nt = length(time);

stackedPlot4(time, ...
             delta_T, delta_e_deg, delta_a_deg, delta_r_deg, ...
             {"Simulation time (s)", ...
              "$\delta_\mathrm{T}$", "$\delta_\mathrm{e}$ (deg)", ...
              "$\delta_\mathrm{a}$ (deg)", "$\delta_\mathrm{r}$ (deg)"}, ...
             {}, {}, 'ex72inputcommands.pdf')

stackedPlot3(time, ...
             u, v, w, ...
             {"Simulation time (s)", ...
              "$u$ (m/s)", "$v$ (m/s)", "$w$ (m/s)"}, ...
             {}, {}, 'ex72velcomponents.pdf')

p_degps = convangvel(p, 'rad/s', 'deg/s');
q_degps = convangvel(q, 'rad/s', 'deg/s');
r_degps = convangvel(r, 'rad/s', 'deg/s');
stackedPlot3(time, ...
             p_degps, q_degps, r_degps, ...
             {"Simulation time (s) ", ...
              "$p$ (deg/s)", "$q$ (deg/s)", "$r$ (deg/s)"}, ...
             {}, {}, 'ex72angvelcomponents.pdf')

stackedPlot2(time, ...
             x_EG, y_EG, ...
             {"Simulation time (s)", ...
              "$x_{\mathrm{E},G}$ (m)", "$y_{\mathrm{E},G}$ (m)"}, ...
             {}, {}, 'ex72cogxy.pdf')

altitude = -z_EG;
airspeed = sqrt(u.^2 + v.^2 + w.^2);
stackedPlot2(time, ...
             altitude, airspeed, ...
             {"Simulation time (s)", ...
              "Altitude (m)", "Airspeed (m/s)"}, ...
             {}, {}, 'ex72altitudeairspeed.pdf')

[psi, theta, phi] = quat2angle([quat0, quatx, quaty, quatz]);
phi_deg = convang(phi, 'rad', 'deg');
theta_deg = convang(theta, 'rad', 'deg');
psi_deg = convang(psi, 'rad', 'deg');
stackedPlot3(time, ...
             phi_deg, theta_deg, psi_deg, ...
             {"Simulation time (s)", ...
              "$\varphi$ (deg)", "$\theta$ (deg)", "$\psi$ (deg)"}, ...
             {}, {}, 'ex72eulangles.pdf')

[alpha_deg, beta_deg] = AlphaBetaDegHistories(u, v, w, airspeed);
stackedPlot2(time, ...
             alpha_deg, beta_deg, ...
             {"Simulation time (s)", ...
              "$\alpha_\mathrm{B}$ (deg)", "$\beta$ (deg)"}, ...
             {}, {}, 'ex72aeroangles.pdf')

ModelsInputs = [alpha_deg, beta_deg, ...
                delta_T, delta_e_deg, delta_s_deg, delta_a_deg, delta_r_deg, ...
                p_degps, q_degps, r_degps, ...
                altitude, airspeed];
CL = zeros(Nt, 1);
CD = CL;
CC = CL;
CRoll = CL;
CPitch = CL;
CYaw = CL;
for it = 1 : Nt
    CL(it) = myAircraft.LiftCoeffModel(ModelsInputs(it, :));
    CD(it) = myAircraft.DragCoeffModel(ModelsInputs(it, :));
    CC(it) = myAircraft.CrossforceCoeffModel(ModelsInputs(it, :));
    CRoll(it) = myAircraft.RollCoeffModel(ModelsInputs(it, :));
    CPitch(it) = myAircraft.PitchCoeffModel(ModelsInputs(it, :));
    CYaw(it) = myAircraft.YawCoeffModel(ModelsInputs(it, :));
end
stackedPlot3(time, ...
             CL, CD, CC, ...
             {"Simulation time (s)", ...
              "$C_L$", "$C_D$", "$C_C$"}, ...
             {}, {}, 'ex72aeroforcecoeffhistories.pdf')
stackedPlot3(time, ...
             CRoll, CPitch, CYaw, ...
             {"Simulation time (s)", ...
              "$C_\mathcal{L}$", "$C_\mathcal{M}$", "$C_\mathcal{N}$"}, ...
             {}, {}, 'ex72aeromomcoeffhistories.pdf')

[f_xA, f_yA, f_zA] = LoadFactor(time, u, v, w, alpha_deg, quat0, quatx, quaty, quatz);
multiPlot(time, ...
          "Simulation time (s)", "$f_{z_\mathrm{A}}$", ...
          {}, ...
          'ex72loadfactor.pdf', ...
          f_zA)

trajectoryView(time, ...
               x_EG, y_EG, z_EG, ...
               phi, theta, psi, ...
               10, 6, ...
               'ex72trajectory.pdf')